<?xml version="1.0"?>
<robot name="plane" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- body, airfoil sizes -->
<xacro:property name="body_s" value="1" />   
<xacro:property name="airfoil_s" value="1" />
<xacro:property name="pi" value="3.1415" />

<!-- body link -->
<xacro:property name="body_h" value="${2.5*body_s}" />
<xacro:property name="body_r" value="${0.5*body_s}" />
<xacro:property name="body_m" value="${body_s/10}" />

    <link name="body_FLU">
        <visual>
            <origin rpy="0 -${pi/2} 0 " />
            <geometry>
                <cylinder radius="${body_r}" length="${body_h}" />
            </geometry>
        </visual>

        <collision>kids
            <origin rpy="0 -${pi/2} 0 " />
            <geometry>
                <cylinder radius="${body_r}" length="${body_h}" />
            </geometry>
        </collision>
        
        <inertial>
            <origin rpy="0 -${pi/2} 0 " />
            <mass value="${body_m}" />
            <inertia ixx="${1/12*(3*body_r*body_r+body_h*body_h)*body_m}" ixy="0" ixz="0" iyz="0"
                iyy="${1/12*(3*body_r*body_r+body_h*body_h)*body_m}" izz="${1/2*body_m*body_r*body_r}" />
        </inertial>

    </link>
    ----------------------------------------------------------------------------  wing
<!-- airfoil link -->
<xacro:property name="airfoil_x" value="${airfoil_s/2}" />
<xacro:property name="airfoil_y" value="${airfoil_s*6}" />
<xacro:property name="airfoil_z" value="${airfoil_s/10}" />
<xacro:property name="airfoil_m" value="2" />
    
    <link name="airfoil">
        <visual>
            <geometry>
                <box size="${airfoil_x} ${airfoil_y} ${airfoil_z}" />
            </geometry>
        </visual>

        <collision>
            <geometry>
                <box size="${airfoil_x} ${airfoil_y} ${airfoil_z}" />
            </geometry>
        </collision>

         <inertial>
            <mass value="${airfoil_m}" />
            <inertia ixx="${1/12*airfoil_m*(airfoil_y*airfoil_y+airfoil_z*airfoil_z)}" ixy="0" ixz="0" iyz="0"
                iyy="${1/12*airfoil_m*(airfoil_x*airfoil_x+airfoil_z*airfoil_z)}" izz="${1/12*airfoil_m*(airfoil_x*airfoil_x+airfoil_y*airfoil_y)}" />
        </inertial>
    </link>
    
    <joint name="body_FLUToWing" type="revolute">
        <origin xyz="0 0 0" rpy ="0 0 0"/>
        <parent link="body_FLU" />
        <child link="airfoil" />
        <limit effort="1000.0" lower="-0.000872665" upper="0.000872665" velocity="0.5"/>
    </joint>
    
 -----------------------------------------------------------------------------------propeller
<!-- arm link -->
<xacro:property name="arm_m" value="${body_m/2}" />
<xacro:property name="arm_r" value="${body_r/5}" />
<xacro:property name="arm_h" value="${body_h/12}" />
    
    <link name="arm">
        <visual>
            <origin xyz="${arm_h/2} 0 0" rpy="0 ${pi/2} 0"/>
            <geometry>
                <cylinder radius="${arm_r}" length="${arm_h}" />
            </geometry>
        </visual>

        <collision>
            <origin xyz="${arm_h/2} 0 0" rpy="0 ${pi/2} 0"/>
            <geometry>
                <cylinder radius="${arm_r}" length="${arm_h}" />
            </geometry>
        </collision>

        <inertial>
            <origin xyz="${arm_h/2} 0 0" />
            <mass value="${arm_m}" />
            <inertia ixx="${1/12*arm_m*arm_h*arm_h+1/4*arm_m*arm_r*arm_r}" ixy="0" ixz="0" iyz="0"
                iyy="${1/12*arm_m*arm_h*arm_h+1/4*arm_m*arm_r*arm_r}" izz="${1/2*arm_m*arm_r*arm_r}" />
        </inertial>
    </link>

    <joint name="body_FLU_to_arm" type="continuous">
        <origin xyz="${body_h/2} 0 0" rpy="0 0 0" />
        <axis xyz="1 0 0" />
        <parent link="body_FLU" />
        <child link="arm" />
    </joint>

<!-- propeller link -->
<xacro:property name="propeller_m" value="${body_m/2}" />
<xacro:property name="propeller_x" value="${0.8*body_s}" />
<xacro:property name="propeller_y" value="${0.2*body_s}" />
<xacro:property name="propeller_z" value="${0.05*body_s}" />
    <link name="propeller">
        <visual>
            <geometry>
                <box size="${propeller_x} ${propeller_y} ${propeller_z}" />
            </geometry>
        </visual>

        <collision>
            <geometry>
                <box size="${propeller_x} ${propeller_y} ${propeller_z}" />
            </geometry>
        </collision>

        <inertial>
            <mass value="${propeller_m}" />
           <inertia ixx="${1/12*propeller_m*(propeller_y*propeller_y+propeller_z*propeller_z)}" ixy="0" ixz="0" iyz="0"
                iyy="${1/12*propeller_m*(propeller_x*propeller_x+propeller_z*propeller_z)}" izz="${1/12*propeller_m*(propeller_x*propeller_x+propeller_y*propeller_y)}" />
        </inertial>

    </link>

    <joint name="arm_to_propeller" type="fixed">
        <origin xyz="${arm_h} 0 0" rpy="0 ${pi/2} 0" />
        <parent link="arm" />
        <child link="propeller" />
    </joint>
    
     ---------------------------------------------------------------------------front wheels
     
     <!-- wheel_base_link -->
<xacro:property name="wheel_base_m" value="${0.5*body_m}" />
<xacro:property name="wheel_base_x" value="${0.05*body_s}" />
<xacro:property name="wheel_base_y" value="${2*body_s}" />
<xacro:property name="wheel_base_z" value="${0.05*body_s}" />

    <link name="wheel_base">
        <visual>
            <geometry>
                <box size="${wheel_base_x} ${wheel_base_y} ${wheel_base_z}" />
            </geometry>
        </visual>

        <collision>
            <geometry>
                <box size="${wheel_base_x} ${wheel_base_y} ${wheel_base_z}" />
            </geometry>
        </collision>

        <inertial>
            <mass value="${wheel_base_m}" />
            <inertia ixx="${1/12*wheel_base_m*(wheel_base_y*wheel_base_y+wheel_base_z*wheel_base_z)}" ixy="0" ixz="0" iyz="0"
                iyy="${1/12*wheel_base_m*(wheel_base_x*wheel_base_x+wheel_base_z*wheel_base_z)}" izz="${1/12*wheel_base_m*(wheel_base_x*wheel_base_x+wheel_base_y*propeller_y)}" />
        </inertial>

    </link>

    <joint name=" body_FLU_to_wheel_base" type="fixed">
        <origin xyz="${0.4*body_h} 0 -${body_r}" rpy="0 0 0" />
        <parent link="body_FLU" />
        <child link="wheel_base" />
    </joint>

<!-- left wheel link -->
<xacro:property name="left_wheel_m" value="${body_m/2}" />
<xacro:property name="left_wheel_r" value="${0.3*body_s}" />
<xacro:property name="left_wheel_h" value="${0.1*body_s}" />

    <link name="left_wheel">
        <visual>
            <origin xyz="0 0 ${left_wheel_h/2}" />
            <geometry>
                <cylinder radius="${left_wheel_r}" length="${left_wheel_h}" />
            </geometry>
        </visual>

        <collision>
            <origin xyz="0 0 ${left_wheel_h/2}" />
            <geometry>
                <cylinder radius="${left_wheel_r}" length="${left_wheel_h}" />
            </geometry>
        </collision>

        <inertial>
            <origin xyz="0 0 ${left_wheel_h/2}" />
            <mass value="${left_wheel_m}" />
           <inertia ixx="${1/12*left_wheel_m*left_wheel_h*left_wheel_h+1/4*left_wheel_m*left_wheel_r*left_wheel_r}" ixy="0" ixz="0" iyz="0"
                iyy="${1/12*left_wheel_m*left_wheel_h*left_wheel_h+1/4*left_wheel_m*left_wheel_r*left_wheel_r}" izz="${1/2*left_wheel_m*left_wheel_r*left_wheel_r}" />
        </inertial>
    </link>

    <joint name="wheel_base_to_left_wheel" type="continuous">
        <origin xyz="0 -${wheel_base_y/2} 0" rpy="${pi/2} 0 0" />
        <parent link="wheel_base" />
        <child link="left_wheel" />
        <axis xyz=" 0 0 1" />
    </joint>

<!-- right wheel link -->
<xacro:property name="right_wheel_m" value="${left_wheel_m}" />
<xacro:property name="right_wheel_r" value="${left_wheel_r}" />
<xacro:property name="right_wheel_h" value="${left_wheel_h}" />

    <link name="right_wheel">
        <visual>
            <origin xyz="0 0 -${right_wheel_h/2}" />
            <geometry>
                <cylinder radius="${right_wheel_r}" length="${right_wheel_h}" />
            </geometry>
        </visual>

        <collision>
            <origin xyz="0 0 -${right_wheel_h/2}" />
            <geometry>
                <cylinder radius="${right_wheel_r}" length="${right_wheel_h}" />
            </geometry>
        </collision>

        <inertial>
            <origin xyz="0 0 -${right_wheel_h/2}" />
           <mass value="${right_wheel_m}" />
           <inertia ixx="${1/12*right_wheel_m*right_wheel_h*right_wheel_h+1/4*right_wheel_m*right_wheel_r*right_wheel_r}" ixy="0" ixz="0" iyz="0"
                iyy="${1/12*right_wheel_m*right_wheel_h*right_wheel_h+1/4*right_wheel_m*right_wheel_r*right_wheel_r}" izz="${1/2*right_wheel_m*right_wheel_r*right_wheel_r}" />
        </inertial>
    </link>

    <joint name="wheel_base_to_right_wheel" type="continuous">
        <origin xyz="0 ${wheel_base_y/2} 0" rpy="${pi/2} 0 0" />
        <parent link="wheel_base" />
        <child link="right_wheel" />
        <axis xyz=" 0 0 1" />
    </joint>

    ------------------------------------------------------------------------------------ rear sphere wheel
<!-- rear wheel link -->
<xacro:property name="rear_wheel_m" value="${body_m/2}" />
<xacro:property name="rear_wheel_r" value="${0.1*body_s}" />

    <link name="rear_wheel">
        <visual>
            <geometry>
                <sphere radius="${rear_wheel_r}" />
            </geometry>
        </visual>

        <collision>
            <geometry>
                <sphere radius="${rear_wheel_r}" />
            </geometry>
        </collision>

        <inertial>
            <mass value="${rear_wheel_m}" />
            <inertia ixx="${2/5*rear_wheel_m*rear_wheel_r*rear_wheel_r}" ixy="0" ixz="0" iyz="0"
                iyy=" ${2/5*rear_wheel_m*rear_wheel_r*rear_wheel_r}" izz="${2/5*rear_wheel_m*rear_wheel_r*rear_wheel_r}" />
        </inertial>
    </link>

    <joint name="body_FLU_to_rear_wheel" type="continuous">
        <origin xyz="-${0.4*body_h} 0 -${body_r}" />
        <axis xyz="0 1 0"/>
        <parent link="body_FLU" />
        <child link="rear_wheel" />
    </joint>
    

<!-- model plugins -->
    <gazebo>
    <plugin name="model_plugin" filename="libmodel_plugin.so"/>
    <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
        <jointName>body_FLUToWing, body_FLU_to_arm, wheel_base_to_left_wheel, wheel_base_to_right_wheel, body_FLU_to_rear_wheel </jointName>
        <robotNamespace>last_letter_2</robotNamespace>
        <updateRate>0</updateRate>
    </plugin>
  </gazebo>

</robot>