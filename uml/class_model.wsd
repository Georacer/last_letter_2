@startuml

class msgs{
        Model_states
        Airdata
        Control_signals
        Aero_wrenches
        Prop_wrenches
    }
    
namespace Ros{

    
    class Master{
        model
        Master()
        ~Master()
        gazebo_clk_clb()
        model_step()
    }

    class Model{
        model_states
        airdata
        control_signals
        aerodynamics
        propulsion
        Model()
        ~Model()
        controller_flag_clb()
        model_step()
        get_states()
        get_control_signals()
        get_airdata()
        calc_wrenches()
        apply_wrenches()
        simulation_step()
    }

    class Aerodynamics{
        aero_wrenches
        Aerodynamics(Model *)
        ~Aerodynamics()
        calc_forces()
        calc_torques()
    }

    class Propulsion{
        prop_wrenches
        Propulsion(Model *)
        ~Propulsion()
        calc_thrust()
        calc_torque()
    }

    class Environment{
        airdata
        Environment()
        ~Environment()
        calc_airdata()
    }
    class controller{
        model_states
        sensor_data
        control_signals
        Controller(Model *)
        ~Controller()
        calc_signals()
    }
}



namespace Gazebo{
    class world_plugin{
        camera_view()
        simulation_step()
    }
    
    class model_plugin{
        model_states
        model_states_server()
        apply_wrenches_server()
    }

    class sensor_plugin{
        model_states
        sensor_data
        pub_sensor_data()
    }
}


Ros.Master --> Ros.Model
Ros.controller -> Ros.Model : control_signals_flag (topic)
Ros.Model <-- Ros.Propulsion
Ros.Environment <-> Ros.Model : pose -airdata (srv)
Ros.Aerodynamics --> Ros.Model
Ros.Model --> Gazebo.model_plugin : wrenches    (srv)
Ros.Model <-- Gazebo.model_plugin : model_states (srv)
Ros.controller <-- Gazebo.sensor_plugin :sensor_data (topic)
Ros.Model -> Gazebo.world_plugin : step (srv)
Ros.Model <-- Ros.controller : control_signals (srv)
Ros.Master <- Gazebo.world_plugin : clock (topic)

' Gazebo.model_plugin - Gazebo.sensor_plugin
' Gazebo.world_plugin - Gazebo.model_plugin

@enduml